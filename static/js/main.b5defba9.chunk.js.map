{"version":3,"sources":["containers/Header/Header.js","containers/Main/Main.js","components/UI/Input/Input.js","components/UI/Select/Organization/Organization.js","components/UI/Select/Gender/Gender.js","components/UI/Select/Professions/Professions.js","components/UI/Radio/Antagonist/Antagonist.js","components/UI/Select/Origin/Origin.js","components/UI/Button/Button.js","components/UI/Radio/Check/Disadvantages.js","components/UI/Radio/Check/Advantage.js","components/UI/Form/Form.js","containers/СharacterCreator/СharacterCreator.js","containers/Description/Description.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Container","Row","Col","md","to","src","style","width","alt","span","offset","Main","map","variant","idx","background","height","Alert","key","textAlign","Input","props","htmlFor","name","title","type","id","value","onChange","handleChange","placeholder","ListOrganization","Organization","disabled","option","k","label","OptionGender","Gender","ListProfession","professions","Profession","i","Antagonist","marginBottom","marginRight","cursor","ListOrigin","Origin","item","Button","onClick","Disadvantages","options","checked","selectedOptions","indexOf","Advantage","Form","state","newUser","full_name","sex","age","profession","organization","be_antagonist","origins","advantages","disadvantages","handleInput","bind","handleFormSubmit","handleCheck","handledisCheck","e","target","this","setState","prevState","newSelectionArray","newSelection","filter","s","lastSelectionArray","lastSelection","event","preventDefault","userData","body","fetch","method","JSON","stringify","headers","onSubmit","Professions","display","flexDirection","justifyContent","React","Component","СharacterCreator","Description","Table","bordered","hover","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b5defba9.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"start\">\r\n            <Container>\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <NavLink to=\"/\" className=\"header-btn\"><img src=\"logo2.png\" style={{width: '50px'}} alt=\"logo\"/></NavLink>\r\n                    </Col>\r\n                    <Col md={{ span: 4, offset: 4 }}>\r\n                        {/* <NavLink\r\n                            to=\"/Documentation\"\r\n                            className=\"header-btn\"\r\n                        >Докуметация</NavLink> */}\r\n                        <NavLink\r\n                            to=\"/Description\"\r\n                            className=\"header-btn\"\r\n                        >Описание</NavLink>\r\n                        <NavLink\r\n                            to=\"/СharacterCreator\"\r\n                            className=\"header-btn\"\r\n                        >Создать персонажа</NavLink>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nconst Main = () => {\r\n    return (\r\n        [\r\n        'warning'\r\n        ].map((variant, idx) => (\r\n            <div style={{background:'#23272A', height:'100vh'}}>\r\n                <Alert key={idx} variant={variant} style={{textAlign:\"center\"}}>\r\n                    Это Альфа версия 1.0.0\r\n                    <p>На этом сайте можно создать Вашего персонажа для игры ТДУВК</p>\r\n                    <p>Если Вам пока что не понятно, как надо создавать, то есть в разделе описание</p>\r\n                </Alert>\r\n            </div>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport './Input.css'\r\n\r\nconst Input = props => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={props.name}>\r\n                {props.title}\r\n            </label>\r\n            <input type={props.type}\r\n                id={props.name}\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n                placeholder={props.placeholder}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst Organization = (props) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={props.name}>{props.title}</label>\r\n            <select \r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n            >\r\n                <option value=\"\" disabled>{props.placeholder}</option>\r\n                {ListOrganization.map(function(option, k) {\r\n                    return (\r\n                        <option key={k} label={option.name} value={option.name}>\r\n                            {option.name}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ListOrganization = [\r\n    {name: 'Центральное Командование NT (ЦК)'},\r\n    {name: 'Нано Трайзен (NT)'},\r\n    {name: 'Правительство Солнечной Системы (SolGov)'},\r\n    {name: 'Zeng-Hu-Pharmaceuticals'},\r\n    {name: 'Второй Красный Квест'},\r\n    {name: 'Вей Мед'},\r\n    {name: 'BioTech Solutios'},\r\n    {name: 'Гибсонский Инженерный союз'},\r\n    {name: 'Gilthari Exports'}\r\n]\r\n\r\nexport default Organization","import React from 'react'\r\n\r\nconst Gender = (props) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={props.name}>{props.title}</label>\r\n            <select \r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n            >\r\n                <option value=\"\" disabled>{props.placeholder}</option>\r\n                {OptionGender.map(function(option, k) {\r\n                    return (\r\n                        <option key={k} label={option.name} value={option.name}>\r\n                            {option.name}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst OptionGender = [{name: 'Мужчина'}, {name: 'Женщина'}]\r\n\r\nexport default Gender","import React from 'react'\r\n\r\nconst Profession = (props) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={props.name}>{props.title}</label>\r\n            <select \r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n            >\r\n                <option value=\"\" disabled>{props.placeholder}</option>\r\n                {ListProfession.map(function(title, k) {\r\n                    return (\r\n                        <optgroup key={k} label={title.name}>\r\n                            {title.professions.map(function(name, i) {\r\n                                return (\r\n                                    <option key={i} value={name.name} label={name.name}>\r\n                                        {name.name}\r\n                                    </option>\r\n                                )\r\n                            })}\r\n                        </optgroup>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ListProfession = [{\r\n    name: 'Управление',\r\n    professions: [{\r\n        value: 'Капитан',\r\n        name: 'Капитан'\r\n    }, {\r\n        value: 'Глава Персонала',\r\n        name: 'Глава Персонала'\r\n    }, {\r\n        value: 'Главый Инженер',\r\n        name: 'Главый Инженер'\r\n    }, {\r\n        value: 'Директор Отдела Исследования',\r\n        name: 'Директор Отдела Исследования'\r\n    }, {\r\n        value: 'Агент Внутренних Дел',\r\n        name: 'Агент Внутренних Дел'\r\n    }]\r\n}, {\r\n    name: 'Служба Безопасности',\r\n    professions: [{\r\n        value: 'Смотритель',\r\n        name: 'Смотритель'\r\n    }, {\r\n        value: 'Детектив',\r\n        name: 'Детектив'\r\n    }, {\r\n        value: 'Офицер СБ',\r\n        name: 'Офицер СБ'\r\n    }, {\r\n        value: 'Криминалист',\r\n        name: 'Криминалист'\r\n    }, {\r\n        value: 'Кадет СБ',\r\n        name: 'Кадет СБ'\r\n    }, {\r\n        value: 'Агент Внутренних Дел',\r\n        name: 'Агент Внутренних Дел'\r\n    }]\r\n}, {\r\n    name: 'Научные сотрудники',\r\n    professions: [{\r\n        value: 'Учёный',\r\n        name: 'Учёный'\r\n    }, {\r\n        value: 'Робототехник',\r\n        name: 'Робототехник'\r\n    }, {\r\n        value: 'Ксеноархеолог',\r\n        name: 'Ксеноархеолог'\r\n    }, {\r\n        value: 'Ксенобиолог',\r\n        name: 'Ксенобиолог'\r\n    }, {\r\n        value: 'Лаборант',\r\n        name: 'Лаборант'\r\n    }]\r\n}, {\r\n    name: 'Медицинский персонал',\r\n    professions: [{\r\n        value: 'Генетик',\r\n        name: 'Генетик'\r\n    }, {\r\n        value: 'Врач',\r\n        name: 'Врач'\r\n    }, {\r\n        value: 'Химик',\r\n        name: 'Химик'\r\n    }, {\r\n        value: 'Вирусолог',\r\n        name: 'Вирусолог'\r\n    }, {\r\n        value: 'Интерн',\r\n        name: 'Интерн'\r\n    }, {\r\n        value: 'Психиатр',\r\n        name: 'Психиатр'\r\n    }]\r\n}, {\r\n    name: 'Техническое обсуживание',\r\n    professions: [{\r\n        value: 'Инженер',\r\n        name: 'Инженер'\r\n    }, {\r\n        value: 'Атмосферный техник',\r\n        name: 'Атмосферный техник'\r\n    }, {\r\n        value: 'Технический ассистент',\r\n        name: 'Технический ассистент'\r\n    }]\r\n}, {\r\n    name: 'Доставка и снабжение',\r\n    professions: [{\r\n        value: 'Квартирмейстер',\r\n        name: 'Квартирмейстер'\r\n    }, {\r\n        value: 'Грузчик',\r\n        name: 'Грузчик'\r\n    }, {\r\n        value: 'Шахтёр',\r\n        name: 'Шахтёр'\r\n    }, {\r\n        value: 'Переработчик',\r\n        name: 'Переработчик'\r\n    }]\r\n}, {\r\n    name: 'Гражданский персонал',\r\n    professions: [{\r\n        value: 'Бармен',\r\n        name: 'Бармен'\r\n    }, {\r\n        value: 'Повар',\r\n        name: 'Повар'\r\n    }, {\r\n        value: 'Ботаник',\r\n        name: 'Ботаник'\r\n    }, {\r\n        value: 'Уборщик',\r\n        name: 'Уборщик'\r\n    }, {\r\n        value: 'Библиотекарь',\r\n        name: 'Библиотекарь'\r\n    }, {\r\n        value: 'Священник',\r\n        name: 'Священник'\r\n    }, {\r\n        value: 'Ассистент',\r\n        name: 'Ассистент'\r\n    }, {\r\n        value: 'Мим',\r\n        name: 'Мим'\r\n    }, {\r\n        value: 'Клоун',\r\n        name: 'Клоун'\r\n    }]\r\n}, {\r\n    name: 'Синтетический разум',\r\n    professions: [{\r\n        value: 'Искусственный интеллект',\r\n        name: 'Искусственный интеллект'\r\n    }, {\r\n        value: 'Киборг',\r\n        name: 'Киборг'\r\n    }, {\r\n        value: 'Персональный ИИ',\r\n        name: 'Персональный ИИ'\r\n    }]\r\n}]\r\n\r\nexport default Profession","import React from 'react'\r\nimport '../styleCheckbox.css'\r\n\r\n// const antagonist = {\r\n//     flexDirection: \"row\",\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     paddingTop: \"0px\"\r\n// }\r\n// let value = (checkboxValue === \"on\") ? true : true;\r\n\r\nconst Antagonist = props => {\r\n    return (\r\n        <div>\r\n            <label className=\"container-checkbox\">{props.title}\r\n            {/* <div style={antagonist}> */}\r\n                <input \r\n                    type=\"checkbox\" \r\n                    name={props.name}\r\n\r\n                    // checked={this.state.newUser.antagonist}\r\n                    onChange={props.handleChange}\r\n                    style={{marginBottom: '0', marginRight: '10px', cursor: 'pointer'}}\r\n                />\r\n                <span className=\"checkmark\"></span>\r\n                {/* <label htmlFor={props.name} style={{cursor: 'pointer', margin: '0px'}}>Да</label> */}\r\n            {/* </div> */}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Antagonist","import React from 'react'\r\n\r\nconst Origin = props => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={props.name}>{props.title}</label>\r\n            <select \r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n            >\r\n                <option value=\"\" disabled>{props.placeholder}</option>\r\n                {ListOrigin.map(function(item, k) {\r\n                    return (\r\n                        <option key={k} value={item.name} label={item.name}>\r\n                            {item.name}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ListOrigin = [\r\n    {name: 'Земля'},\r\n    {name: 'Венера'},\r\n    {name: 'Бимпа'},\r\n    {name: 'Новый Гобсон'},\r\n    {name: 'Рожденный на КС'}\r\n]\r\n\r\nexport default Origin","import React from 'react'\r\nimport './Button.css'\r\n\r\nconst Button = props => {\r\n    // const cls = [\r\n    //     classes.Button,\r\n    //     classes[props.type]\r\n    // ]\r\n\r\n    return(\r\n        <button\r\n            className=\"Button\"\r\n            onClick={props.onClick}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.title}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport '../styleCheckbox.css'\r\n\r\nconst Disadvantages = props => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={props.name} className=\"form-label\">\r\n        {props.title}\r\n      </label>\r\n      <div className=\"checkbox\">\r\n        {props.options.map(option => {\r\n          return (\r\n            <label key={option} className=\"container-checkbox\">\r\n              <input\r\n                id={props.name}\r\n                name={props.name}\r\n                onChange={props.handleChange}\r\n                value={option}\r\n                checked={props.selectedOptions.indexOf(option) > -1}\r\n                type=\"checkbox\"\r\n              />\r\n              {option}\r\n              <span className=\"checkmark\"></span>\r\n            </label>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Disadvantages;","import React from \"react\";\r\nimport '../styleCheckbox.css'\r\n\r\nconst Advantage = props => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={props.name} className=\"form-label\">\r\n        {props.title}\r\n      </label>\r\n      <div className=\"checkbox\">\r\n        {props.options.map(option => {\r\n          return (\r\n            <label key={option} className=\"container-checkbox\">\r\n              <input\r\n                id={props.name}\r\n                name={props.name}\r\n                onChange={props.handleChange}\r\n                value={option}\r\n                checked={props.selectedOptions.indexOf(option) > -1}\r\n                type=\"checkbox\"\r\n              />\r\n              {option}\r\n              <span className=\"checkmark\"></span>\r\n            </label>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Advantage;\r\n","import React from 'react'\r\nimport Input from '../Input/Input'\r\nimport Organization from '../Select/Organization/Organization'\r\nimport Gender from '../Select/Gender/Gender'\r\nimport Professions from '../Select/Professions/Professions'\r\nimport Antagonist from '../Radio/Antagonist/Antagonist'\r\nimport Origin from '../Select/Origin/Origin'\r\nimport Button from '../Button/Button'\r\n\r\nimport Disadvantages from '../Radio/Check/Disadvantages'\r\nimport Advantage from '../Radio/Check/Advantage'\r\n\r\nimport './Form.css'\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        newUser: {\r\n            full_name: '',\r\n            sex: '',\r\n            age: '',\r\n            profession: '',\r\n            organization: '',\r\n            be_antagonist: false,\r\n            origins: '',\r\n            advantages: [],\r\n            disadvantages: [],\r\n        },\r\n        \r\n        advantages: [\"Огнестрельная подготовка\", \"Курсы рукопашного боя\", \"Боевые рефлексы\", \"Выброс адреналина\", \"Крепкий\", \"Сильный\", \"Компетентный\", \"Эрудированный\", \"Высокий болевой порог\", \"Здоровый\", \"Ловкий\", \"Психопат\", \"Работник месяца\", \"Важность\", \"Исчерпывающий опыт\", \"Высокая квалификация\", \"Подготовленный\", \"Глубинное понимание\", \"Вторая специальность\", \"Третий глаз\", \"Лицензия\"],\r\n        disadvantages: [\"Адвентизм\", \"Пацифизм\", \"Заторможенность\", \"Апатичность\", \"Хрупкий\", \"Слабый\", \"Некомпетентный\", \"Глупый\", \"Низкий болевой порог\", \"Хилый\", \"Неуклюжий\", \"Альтруист\", \"Предвзятость\", \"Расходник\", \"Недостаток опыта\", \"Низкая квалификация\", \"Неготовый\", \"Глубинное непонимание\", \"Срочный перевод\", \"Бегство\", \"Ментальное оглушение\", \"Специальное постановление\"],\r\n    }\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.handleCheck = this.handleCheck.bind(this);\r\n    this.handledisCheck = this.handledisCheck.bind(this);\r\n}\r\n\r\n    handleInput(e) {\r\n        let {name, value, type, checked} = e.target\r\n        if (type === 'checkbox') {\r\n            value = checked\r\n        }\r\n\r\n        this.setState(\r\n            prevState => ({\r\n                newUser: {\r\n                    ...prevState.newUser,\r\n                    [name]: value\r\n                }\r\n            })\r\n        )\r\n    }\r\n    \r\n    handleCheck(e) {\r\n        const newSelection = e.target.value;\r\n        let newSelectionArray;\r\n    \r\n        if (this.state.newUser.advantages.indexOf(newSelection) > -1) {\r\n          newSelectionArray = this.state.newUser.advantages.filter(\r\n            s => s !== newSelection\r\n          );\r\n        } else {\r\n          newSelectionArray = [...this.state.newUser.advantages, newSelection];\r\n        }\r\n    \r\n        this.setState(prevState => ({\r\n          newUser: { ...prevState.newUser, advantages: newSelectionArray }\r\n        }));\r\n    }\r\n\r\n    handledisCheck(e) {\r\n        const lastSelection = e.target.value;\r\n        let lastSelectionArray;\r\n\r\n        if (this.state.newUser.disadvantages.indexOf(lastSelection) > -1) {\r\n            lastSelectionArray = this.state.newUser.disadvantages.filter(\r\n                s => s !== lastSelection\r\n            );\r\n        } else {\r\n            lastSelectionArray = [...this.state.newUser.disadvantages, lastSelection];\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            newUser: { ...prevState.newUser, disadvantages: lastSelectionArray }\r\n        }))\r\n    }\r\n\r\n    handleFormSubmit(event) {\r\n        event.preventDefault();\r\n        let userData = this.state.newUser;\r\n        // в to создаем почту и отправляем по ей\r\n        userData.to = 'i_daktes_i@mail.ru'\r\n        userData.body = `\r\n        <table cellpadding=\"8px\">\r\n            <tr>\r\n                <th align=\"left\">Имя:</th>\r\n                <td align=\"left\">${userData.full_name}</td>\r\n            </tr>\r\n            <tr>\r\n                <th align=\"left\">Возраст:</th>\r\n                <td align=\"left\">${userData.age}</td>\r\n            </tr>\r\n            <tr>\r\n                <th align=\"left\">Пол:</th>\r\n                <td align=\"left\">${userData.sex}</td>\r\n            </tr>\r\n            <tr>\r\n                <th align=\"left\">Профессия:</th>\r\n                <td align=\"left\">${userData.profession}</td>\r\n            </tr>\r\n            <tr>\r\n                <th align=\"left\">Организация:</th>\r\n                <td align=\"left\">${userData.organization}</td>\r\n            </tr>\r\n            <tr>\r\n                <th align=\"left\">Антогонист:</th>\r\n                <td align=\"left\">${userData.be_antagonist ? 'Да' : 'Нет'}</td>\r\n            </tr>\r\n            <tr>\r\n                <th align=\"left\">Откуда:</th>\r\n                <td align=\"left\">${userData.origins}</td>\r\n            </tr>\r\n            <tr>\r\n                <th align=\"left\">Преимущества:</th>\r\n                <td align=\"left\">${userData.advantages}</td>\r\n            </tr>\r\n            <tr>\r\n                <th align=\"left\">Недостатки:</th>\r\n                <td align=\"left\">${userData.disadvantages}</td>\r\n            </tr>\r\n        </table>\r\n    `;\r\n        // https://webhook.site/b3049de9-6881-432d-9b36-5dfd8e8dea9f\r\n        // http://localhost:3001/mail/\r\n        fetch('http://localhost:3001/mail/', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(userData),\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n        })\r\n        // .then(response => {\r\n        \r\n        // })\r\n\r\n        // fetch('https://tduvk.herokuapp.com/api/players/',{\r\n        //     method: \"POST\",\r\n        //     body: JSON.stringify(userData),\r\n        //     headers: {\r\n        //       'Accept': 'application/json',\r\n        //       'Content-Type': 'application/json'\r\n        //     },\r\n        //   }).then(response => {\r\n        //     response.json().then(data => {\r\n        //       console.log(\"Successful\" + data);\r\n        //     })\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        const { full_name, age, sex, profession, organization, be_antagonist, origins, advantages, disadvantages } = this.state.newUser;\r\n        return (\r\n            <div className=\"main-characer\">\r\n                <form onSubmit={this.handleFormSubmit}>\r\n                    <Input\r\n                        value={full_name}\r\n                        type={\"text\"}\r\n                        title={\"Ваше Имя\"}\r\n                        name={\"full_name\"}\r\n                        placeholder={\"Ведите Ваше имя\"}\r\n                        handleChange={this.handleInput}\r\n                    />\r\n                    <span className=\"vision\">{full_name}</span>\r\n                    <Input\r\n                        value={age}\r\n                        placeholder={\"Ваш возраст?\"}\r\n                        type={\"number\"}\r\n                        name={\"age\"}\r\n                        title={\"Ваш возраст\"}\r\n                        handleChange={this.handleInput}\r\n                    />\r\n                    <span className=\"vision\">{age}</span>\r\n                    <Gender\r\n                        value={sex}\r\n                        title={\"Ваш пол\"}\r\n                        name={\"sex\"}\r\n                        handleChange={this.handleInput}\r\n                        placeholder={\"Выберите Ваш пол\"}\r\n                    />\r\n                    <span className=\"vision\">{sex}</span>\r\n                    <Professions\r\n                        value={profession}\r\n                        name={\"profession\"}\r\n                        title={\"Профессия\"}\r\n                        handleChange={this.handleInput}\r\n                        placeholder={\"Выберите Профессию\"}\r\n                    />\r\n                    <span className=\"vision\">{profession}</span>\r\n                    <Organization\r\n                        value={organization}\r\n                        title={\"Организации\"}\r\n                        name={\"organization\"}\r\n                        handleChange={this.handleInput}\r\n                        placeholder={\"Выберите организацию\"}\r\n                    />\r\n                    <span className=\"vision\">{organization}</span>\r\n                    <Antagonist\r\n                        type=\"checkbox\"\r\n                        value={be_antagonist}\r\n                        title={\"Хочу быть антогонистом\"}\r\n                        checked={be_antagonist}\r\n                        name={\"be_antagonist\"}\r\n                        handleChange={this.handleInput}\r\n                    />\r\n                    <span className=\"vision\">{be_antagonist ? 'Да' : 'Нет'}</span>\r\n                    <Origin\r\n                        value={origins}\r\n                        handleChange={this.handleInput}\r\n                        placeholder={\"Откуда ты епта?\"}\r\n                        title={\"Откуда ты там взялся?\"}\r\n                        name={\"origins\"} \r\n                    />\r\n                    <span className=\"vision\">{origins}</span>\r\n                    <div className=\"adv\" style={{display:'flex', flexDirection:'row',justifyContent: 'space-between'}}>\r\n                        <Advantage\r\n                            selectedOptions={advantages}\r\n                            title={\"Преимущества\"}\r\n                            name={\"advantages\"}\r\n                            options={this.state.advantages}\r\n                            handleChange={this.handleCheck}\r\n                        />\r\n                        <Disadvantages\r\n                            selectedOptions={disadvantages}\r\n                            title={\"Недостатки\"}\r\n                            name={\"disadvantages\"}\r\n                            options={this.state.disadvantages}\r\n                            handleChange={this.handledisCheck}\r\n                        />\r\n                    </div>\r\n                    <hr/>\r\n                    <label>Принятие факта, что Ваш персонаж может погибнуть в первые минуты игры</label>\r\n\r\n                    <Button value=\"Submit\" onClick={this.handleFormSubmit} title={\"Создать\"}>Создать</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    // временно \r\n    // componentDidUpdate() {\r\n    //     console.log(this.state);\r\n    // }\r\n}\r\n\r\nexport default Form","import React, {Component} from \"react\";\r\nimport './СharacterCreator.css'\r\n\r\n// import Result from '../../components/Result/Result'\r\nimport Form from \"../../components/UI/Form/Form\"\r\n\r\n\r\n\r\nclass СharacterCreator extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"СharacterCreator\">\r\n        <main>\r\n          <div className=\"container\">\r\n            <div className=\"first-character\">\r\n              <Form />\r\n              {/* <Result /> */}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default СharacterCreator;","import React, {Component} from 'react'\r\nimport './Description.css'\r\nimport Table from 'react-bootstrap/Table'\r\nclass Description extends Component {\r\n  render() {\r\n    return (\r\n        <section>\r\n            <div className=\"container\">\r\n                <div className=\"description\">\r\n                    <div className=\"organization\">\r\n                        <h3>Организации</h3>\r\n                        <Table bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Организации</th>\r\n                                    <th>Преимущество</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Нано Трайзен (NT)</td>\r\n                                    <td>+1 к СПД Правительство Солнечной Системы (SolGov): +1 к СПД и КЗ Преимущество «Важность»</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Zeng-Hu Pharmaceuticals (ZHP)</td>\r\n                                    <td>+1 к Фармакологии, Хирургии и Врачебному делу</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Второй Красный Крест (SRC)</td>\r\n                                    <td> +1 к Первой помощи, Врачебному делу и Хирургии</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Вей Мед (VM)</td>\r\n                                    <td>+1 к Биоинженерии и Врачебному делу</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>BioTech Solutions (BTS)</td>\r\n                                    <td>+1 к Робототехнике и Программированию</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Гибсонский Инженерный Союз (GIU)</td>\r\n                                    <td>+1 к Инженерии; Недостаток «Расходник»</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Gilthari Exports (GEX)</td>\r\n                                    <td>+1 к Ксеноархеиологии</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <div className=\"origin\">\r\n                        <h3>Происхождение</h3>\r\n                        <Table bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Происхождение</th>\r\n                                    <th>плюсы</th>\r\n                                    <th>минусы</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Земля</td>\r\n                                    <td>+1 к Интеллекту, +1 от сотрудников SolGov</td>\r\n                                    <td>-2 к Здоровью</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Марс</td>\r\n                                    <td>+1 к Силе, +1 от сотрудников SolGov</td>\r\n                                    <td>-1 к Здоровью</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Венера</td>\r\n                                    <td>+1 от сотрудников SolGov</td>\r\n                                    <td>-1 к Робототехнике</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Бимна</td>\r\n                                    <td>ничего не меняется</td>\r\n                                    <td>ничего не меняется</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Новый Гибсон</td>\r\n                                    <td>+1 к Силе и Инженерии</td>\r\n                                    <td>-1 к реакции на сотрудников NT, SolGov и GIU, уроженцев Марса и Венеры</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Рождённый на КС</td>\r\n                                    <td> +1 к Космонавт</td>\r\n                                    <td>Нету</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <div className=\"advantages-disadvantage\">\r\n                        <h3>Описание преимуществ</h3>\r\n                        <ul>\r\n                            <li>Огнестрельная подготовка‘ – Вы обретаете навык обращения с огнестрельным оружием (или получаете +2, если уже им обладали)</li>\r\n                            <li>Курсы рукопашного боя‘ – Вы обретаете навык рукопашного боя (или получаете +2, если уже им обладали)</li>\r\n                            <li>Боевые рефлексы‘* – Вас практически невозможно застать в врасплох</li>\r\n                            <li>Выброс адреналина* – Вы получаете +1 ко всем атрибутам на второй секунде боя </li>\r\n                            <li>Крепкий* – Вы получаете +3 HP</li>\r\n                            <li>Сильный‘* – Вы получаете +2 к Силе </li>\r\n                            <li>Компетентный‘ – Вы получаете +1 ко всем навыкам профессии </li>\r\n                            <li>Эрудированный‘* – Вы получаете +1 к Интеллекту</li>\r\n                            <li>Высокий болевой порог* – Боль оказывает на Вас меньший негативный эффект </li>\r\n                            <li>Здоровый‘* – Вы получаете +2 к Здоровью</li>\r\n                            <li>Ловкий‘* – Вы получаете +1 к Ловкости</li>\r\n                            <li>Психопат* – Вам безразличны чувства других. Вы не знаете что такое обще-приемлемая мораль.  No Gods, no Masters</li>\r\n                            <li>Работник месяца‘ – Вы получаете +1 реакции от представителей ЦК и Вашего начальства</li>\r\n                            <li>Важность‘ – Вы крайне важны ЦК. За Вашу жизнь будут бороться и Вас точно не бросят</li>\r\n                            <li>Исчерпывающий опыт‘ – Вы получаете +2 к одному выбранному практическому навыку, которым Вы уже обладаете, таких как Использование электроники, Скафандр, RIG, Первая помощь, Огнестрельное оружие или к подобному</li>\r\n                            <li>Высокая квалификация‘ – Вы владеете всеми необходимыми навыками для повышения</li>\r\n                            <li>Подготовленный‘ – Перед отправкой на КС вы прошли подготовку, дающую +1 к общим навыкам, таких как Космонавт, Первая помощь, Право (СПД), Скафандры и Использование компьютера </li>\r\n                            <li>Глубинное понимание‘ – Вы получаете +2 к одному выбранному теоретическому навыку, которым Вы уже обладаете, таких как Право, Инженерия, Космонавт или подобному</li>\r\n                            <li>Вторая специальность‘ – Вы обретаете навык и знание ещё одной, выбранной Вами должности.</li>\r\n                            <li>Третий глаз‘* – Вы имеете необычную интуицию, улавливающую тонкие нити истинности данного мира. </li>\r\n                            <li>Лицензия‘ – Вы имеете документ с печатью ЦК, позволяющий иметь при себе, пользоваться, что-либо делать. Без него у Вас могли быть проблемы с СБ и командованием. </li>\r\n                        </ul>\r\n                        <h3>Описание недостатков</h3>\r\n                        <ul>\r\n                            <li>Адвентизм‘* – Вы не можете брать какое-либо оружие в руки или использовать предметы в качестве оружия</li>\r\n                            <li>Пацифизм‘* – Вы не можете причинять прямой вред живым, разумным существам, если Вы не были свидетелем того, как они приносят вред</li>\r\n                            <li>Заторможенность‘* – Инициатива вечно не за Вами</li>\r\n                            <li>Апатичность‘* – В бою вы получаете -1 к Ловкости и Интеллекту</li>\r\n                            <li>Хрупкий* – Вы получаете -3 HP</li>\r\n                            <li>Слабый‘* – Вы получаете -2 к Силе</li>\r\n                            <li>Некомпетентный‘ – Вы получаете -1 ко всем навыкам профессии</li>\r\n                            <li>Глупый‘* – Вы получаете -1 к Интеллекту</li>\r\n                            <li>Низкий болевой порог* – Боль оказывает на Вас больший негативный эффект</li>\r\n                            <li>Хилый‘* – Вы получаете -2 к Здоровью</li>\r\n                            <li>Неуклюжий‘* – Вы получаете -1 к Ловкости</li>\r\n                            <li>Альтруист‘* – Вы чувствуете обязанность помогать если Вас об этом просят, даже когда это не входит в Ваши полномочия или сферу компетенции</li>\r\n                            <li>Предвзятость‘ – Вы получаете -1 реакции от представителей ЦК и Вашего начальства</li>\r\n                            <li>Расходник‘ – ЦК безразлична Ваша участь. Возможно ЦК не против если Вы не вернётесь </li>\r\n                            <li>Недостаток опыта‘ – Вы получаете -2 к одному выбранному практическому навыку, которым Вы уже обладаете, таких как Использование электроники, Скафандр, RIG, Первая помощь, Огнестрельное оружие или к подобному </li>\r\n                            <li>Низкая квалификация‘ – Вы не владеете навыками, требуемыми для занимаемой должности, Вас стоило бы понизить</li>\r\n                            <li>Неготовый‘ – Перед отправкой на КС вы не прошли подготовку из-за чего у Вас -1 к общим навыкам, таких как Космонавт, Первая помощь, Право (СПД), Скафандры и Использование компьютера</li>\r\n                            <li>Глубинное непонимание‘ – Вы получаете -2 к одному выбранному теоретическому навыку, которым Вы уже обладаете, таких как Право, Инженерия, Космонавт или подобному</li>\r\n                            <li>Срочный перевод‘ – Вас перевели с прошлого места работы в срочном порядке. У Вас нет общих навыков, таких как Космонавт, Первая помощь, Право (СПД), Скафандры и Использование компьютера, только если они не включены в компетенцию Вашей должности</li>\r\n                            <li>Бегство‘ – Вы здесь, так как убеждены, что в космосе Вас никто не найдёт. </li>\r\n                            <li>Ментальное оглушение‘* – Ваша интуиция почти всегда молчит.</li>\r\n                            <li>Специальное постановление‘ – ЦК отправило на борт специальное постановление, содержащее какой-либо запрет, действующий только в Вашем отношении.</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Description;","import React from 'react'\r\nimport Header from './containers/Header/Header'\r\nimport Main from './containers/Main/Main'\r\n// import Documentation from './containers/Documentation/Documentation'\r\nimport СharacterCreator from './containers/СharacterCreator/СharacterCreator'\r\nimport Description from './containers/Description/Description'\r\nimport { Route, BrowserRouter } from 'react-router-dom'\r\n\r\nconst App = () => {\r\n    return (\r\n      <BrowserRouter>\r\n          <Header />\r\n          <Route path=\"/\" exact component={Main}/>\r\n          <Route path=\"/СharacterCreator\" component={СharacterCreator}/>\r\n          {/* <Route path=\"/Documentation\" component={Documentation}/> */}\r\n          <Route path=\"/Description\" component={Description}/>\r\n      </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import {BrowserRouter} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n  "],"sourceRoot":""}